"""create_users_table

Revision ID: ffdc0a98111c
Revises:
Create Date: 2020-11-20 15:06:02.230689

"""
from alembic import op
import sqlalchemy as sa

import os
environment = os.getenv("FLASK_ENV")
SCHEMA = os.environ.get("SCHEMA")


# revision identifiers, used by Alembic.
revision = 'ffdc0a98111c'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('username', sa.String(length=40), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('bio', sa.String(length=255), nullable=True),
    sa.Column('profileImageUrl', sa.String(), nullable=True),
    sa.Column('createdAt', sa.DateTime(), nullable=False),
    sa.Column('updatedAt', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('books',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('lang', sa.String(length=30), nullable=False),
    sa.Column('summary', sa.String(), nullable=False),
    sa.Column('author', sa.String(), nullable=False),
    sa.Column('publisher', sa.String(), nullable=False),
    sa.Column('genre', sa.String(length=30), nullable=False),
    sa.Column('avgRating', sa.Float(asdecimal=True), nullable=True),
    sa.Column('difficulty', sa.String(length=20), nullable=False),
    sa.Column('imgUrl', sa.String(), nullable=True),
    sa.Column('createdAt', sa.DateTime(), nullable=False),
    sa.Column('updatedAt', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('collections',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('userId', sa.Integer(), nullable=False)
    sa.Column('lang', sa.String(length=30), nullable=False),
    sa.Column('createdAt', sa.DateTime(), nullable=False),
    sa.Column('updatedAt', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['userId'], ['users.id']),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('userId'),
    )
    op.create_table('collections_books',
    sa.Column('bookId', sa.Integer(), nullable=False),
    sa.Column('collectionId', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Integer(), nullable=False, server_default="1"),
    sa.Column('createdAt', sa.DateTime(), nullable=False),
    sa.Column('updatedAt', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['bookId'], ['books.id']),
    sa.ForeignKeyConstraint(['collectionId'], ['collections.id'],),
    sa.PrimaryKeyConstraint('bookId', 'collectionId')
    )
    op.create_table('reviews',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('review', sa.String(length=2000), nullable=False),
    sa.Column('bookId', sa.Integer(), nullable=False)
    sa.Column('userId', sa.Integer(), nullable=False),
    sa.Column('createdAt', sa.DateTime(), nullable=False),
    sa.Column('updatedAt', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['userId'], ['users.id']),
    sa.ForeignKeyConstraint(['bookId'], ['books.id']),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('userId'),
    sa.UniqueConstraint('bookId')
    )
    if environment == "production":
        op.execute(f"ALTER TABLE users SET SCHEMA {SCHEMA};")
    # ### end Alembic commands ###qqqqqqqqq


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('collections_books')
    op.drop_table('collections')
    op.drop_table('reviews')
    op.drop_table('books')
    op.drop_table('users')
    # ### end Alembic commands ###
